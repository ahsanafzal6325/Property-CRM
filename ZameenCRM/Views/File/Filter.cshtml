@model IEnumerable<ZameenCRM.Models.ViewModel>
@{
    ViewData["Title"] = "Filter";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">Select Platter</h4>
                <a href="/File/Create" class="btn btn-success">Add New File</a>
                @*<button type="button" class="btn btn-primary" onclick="openCreateModal()">
                    Add New File
                </button>*@
            </div>
            <div class="card-body">
                <form id="platterForm" method="post" asp-action="Filter">
                    <div class="row">
                        <div class="col-xl-4 col-md-6 col-12">
                            @*@Html.DropDownList("platID", new SelectList(ViewBag.Platter, "PlatterNo", "Description"), "Select Platter", new { @class = "form-control input-sm" })*@
                            @Html.DropDownList("platID", ViewBag.Platter as SelectList, "Select Platter", new { @class = "form-control input-sm" })
                        </div>
                        <div class="form-group mt-2">
                            <input type="submit" value="Submit" class="btn btn-primary" />
                        </div>
                    </div>
                </form>
            </div>
        </div>

    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">Files List</h4>
            </div>
            <div class="card-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.file.FileNo)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.file.Marla)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.file.Area)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.file.Amount)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.pro.ProjectName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.block.BlockName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.file.Status)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.file.FileNo)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.file.Marla)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.file.Area)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.file.Amount)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.pro.ProjectName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.block.BlockName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.file.Status)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>





<!--MODEL FOR CREATE STUDENT-->

<div class="modal fade" id="addStudentModal" tabindex="-1" role="dialog" aria-labelledby="addStudentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addStudentModalLabel">Add New File</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Partial view content will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" onclick="location.reload()">Reload</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="submitCreateForm()">Submit</button>
            </div>
        </div>
    </div>
</div>


<script>
    function openCreateModal() {
        $.ajax({
            url: '/File/Create',
            type: 'GET',
            success: function (response) {
                $('#addStudentModal .modal-body').html(response);
                $('#addStudentModal').modal('show');
            },
            error: function (xhr, status, error) {
                // Handle error if necessary
                console.log(error);
            }
        });
    }
    function submitCreateForm() {
        var formData = new FormData($('#createFileForm')[0]);
        $.ajax({
            url: '/File/Create',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                // Handle success logic here
                $('#addStudentModal').modal('hide');
                location.reload();  // Optionally, you can refresh the page or update the student list after successfully adding a new student
            },
            error: function (xhr, status, error) {
                // Handle error if necessary
                console.log(error);
            }
        });
    }
</script>