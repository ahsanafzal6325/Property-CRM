@model ZameenCRM.Models.AddFileVM

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">Add File</h4>
            </div>
            <div class="card-body">
                    <form method="post" asp-action="Create" id="createFileForm">
                        <div class="row">
                            <div class="col-xl-6 col-md-6 col-6">
                                <div class="mb-1">
                                    <label class="form-label" for="basicInput">File No</label>
                                    <input type="text" class="form-control" value="@ViewBag.fileNo" id="FileNo" name="FileNo" placeholder="Enter File No" readonly="readonly" />
                                </div>
                            </div>
                            <div class="col-xl-6 col-md-12 col-6">
                                <div class="mb-1">
                                    <label class="form-label" for="basicInput">Block</label>
                                    @Html.DropDownListFor(x => x.BlockId, new SelectList(ViewBag.Block, "Value", "Text"), "-- Select Block --", new { @class = "form-control input-sm", id = "Block" })
                                </div>
                            </div>
                            <div class="col-xl-6 col-md-12 col-6">
                                <div class="mb-1">
                                    <label class="form-label" for="basicInput">Type</label>
                                    @Html.DropDownListFor(x => x.TypeId, new SelectList(ViewBag.Type, "Value", "Text"), "-- Select Type --", new { @class = "form-control input-sm", id = "Type" })
                                </div>
                            </div>
                            <div class="col-xl-6 col-md-12 col-6">
                                <div class="mb-1">
                                    <label class="form-label" for="basicInput">Plan</label>
                                    @Html.DropDownListFor(x => x.PlanId, new SelectList(ViewBag.Plans, "Value", "Text"), "-- Select Plan --", new { @class = "form-control input-sm", id = "planDropDown" })
                                </div>
                            </div>
                            <div class="col-xl-6 col-md-12 col-12">
                                <div class="mb-1">
                                    <label class="form-label" for="basicInput">Marla</label>
                                    @Html.DropDownListFor(x => x.MarlaId, Enumerable.Empty<SelectListItem>(), "-- Select Marla --", new { @class = "form-control input-sm", id = "marlaDropDown" })
                                </div>
                            </div>
                            <div class="col-xl-6 col-md-12 col-12">
                                <div class="mb-1">
                                    <label class="form-label" for="basicInput">Amount</label>
                                    <input type="number" class="form-control" value="0" id="Amount" name="Amount" placeholder="Total Amount" readonly />
                                </div>
                            </div>
                            <div class="col-xl-6 col-md-12 col-12">
                                <div class="mb-1">
                                    <label>Area Sarsai</label>
                                    <input type="text" name="Sarsai" id="Sarsai" class="form-control" placeholder="Enter Area Sarsai" />
                                </div>
                            </div>
                            <div class="form-group mt-2">
                                <input type="submit" value="Submit" class="btn btn-primary" />
                            </div>
                        </div>
                      
                    </form>
                </div>
            </div>

    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        $("#planDropDown").change(function () {
            var selectedPlanId = $(this).val();
            $.ajax({
                url: "/File/GetMarlasByPlanId",
                type: "GET",
                data: { planId: selectedPlanId },
                success: function (data) {
                    $("#Amount").val(0);

                    var marlaDropdown = $("#marlaDropDown");
                    marlaDropdown.empty(); 
                    marlaDropdown.append($('<option></option>').val("").text("-- Select Marla --")); 
                    $.each(data, function (index, item) {
                        marlaDropdown.append($('<option></option>').val(item.Value).text(item.Text));
                    });
                },
                error: function (error) {
                    console.log(error);
                }
            });
        });

        $("#marlaDropDown").change(function () {
            var selectedMarlaId = $(this).val();

            $.ajax({
                url: "/File/GetPriceByMarla",
                type: "POST",
                data: { marlaId: selectedMarlaId },
                success: function (data) {
                    $("#Amount").val(data);
                },
                error: function (error) {
                    console.log(error);
                }
            });
        });
    });


    function calculateTotalAmount() {
        const marlaValue = parseFloat(document.getElementById("Marla").value);
        const ratePerMarlaValue = parseFloat(document.getElementById("RatePer").value);

        if (!isNaN(marlaValue) && !isNaN(ratePerMarlaValue)) {
            const totalAmount = marlaValue * ratePerMarlaValue;
            document.getElementById("Amount").value = totalAmount;
        }
    }

</script>
